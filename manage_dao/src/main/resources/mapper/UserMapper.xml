<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.it.dao.UserDao">
    <sql id="field">id,name,sex,address</sql>
    <insert id="insert">
        INSERT tb_user(id,name,sex,address) VALUES (#{id},#{name},#{sex},#{address})
    </insert>
    <delete id="delete">
        DELETE FROM tb_user WHERE id=#{id}
    </delete>
    <update id="update">
        UPDATE tb_user
        <trim prefix="SET" suffixOverrides=",">
            <if test="name!= null and name !='' and name != 'null'">name=#{name},</if>
            <if test="sex!= null ">sex=#{sex},</if>
            <if test="address!= null and address !='' and address != 'null'">address=#{address}</if>
        </trim>
        WHERE id=#{id} ;
    </update>

    <select id="select" resultType="Tb_User">
        SELECT id,name,sex,address,photo FROM tb_user
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="id!= null and id !='' ">id=#{id}</if>
            <if test="name!= null and name !='' and name != 'null'">AND name=#{name}</if>
            <if test="sex!= null ">AND sex=#{sex}</if>
            <if test="address!= null and address !='' and address != 'null'">AND address=#{address}</if>
        </trim>
    </select>

    <!--根据id查询用户-->
    <select id="selectUserById" parameterType="java.lang.Integer" resultType="Tb_User">
        SELECT * FROM tb_user WHERE id=#{id}
    </select>

    <!--根据名字查询用户-->
    <select id="selectUserByName" parameterType="java.lang.String" resultType="Tb_User">
        SELECT id,name,sex,address,photo,password FROM tb_user WHERE name=#{name}
    </select>

    <!--根据地址查询用户list-->
    <!-- There is no getter for property named 'address' in 'class java.lang.String',解决办法是把test=""中的address替换为_parameter-->
    <select id="selectUserByAddress" parameterType="java.lang.String" resultType="Tb_User">
        select * from tb_user
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="_parameter!= null and _parameter !='' ">address=#{address}</if>
        </trim>
    </select>

    <!--多对多,联合查询-->
    <!-- resultMap:映射实体类和字段之间的一一对应的关系 -->
    <resultMap id="userRole" type="Tb_User">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="sex" column="sex"/>
        <result property="address" column="address"/>
        <!--一对一关系映射使用association-->
        <!--一对多关联映射使用collection -->
        <collection property="roles" ofType="Tb_Role">
            <id property="id" column="id"/>
            <result property="roleName" column="roleName"/>
        </collection>
    </resultMap>
    <select id="selectUserRole" parameterType="java.lang.Integer" resultMap="userRole">
        SELECT u.id,u.name,u.sex,u.address,r.id,r.roleName FROM tb_user u LEFT JOIN tb_user_role ur ON u.id=ur.tb_user_id LEFT JOIN tb_role r ON r.id=ur.tb_role_id WHERE u.id=#{id}
    </select>
    <!--SELECT u.id,u.name,u.sex,u.address,r.id,r.roleName FROM tb_user u , tb_user_role ur ,tb_role r WHERE u.id=ur.tb_user_id AND r.id=ur.tb_role_id AND u.id=#{id}-->

</mapper>
